<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hashing on Lukas Scheucher</title><link>https://scheuclu.github.io/tags/hashing/</link><description>Recent content in hashing on Lukas Scheucher</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 27 Jul 2022 15:01:17 +0200</lastBuildDate><atom:link href="https://scheuclu.github.io/tags/hashing/index.xml" rel="self" type="application/rss+xml"/><item><title>Password hash cracking</title><link>https://scheuclu.github.io/posts/password_hash_cracking/</link><pubDate>Wed, 27 Jul 2022 15:01:17 +0200</pubDate><guid>https://scheuclu.github.io/posts/password_hash_cracking/</guid><description>Table Of Contents Motivation How do logins work? A quick intro to hash-functions Let&amp;rsquo;s design a trivial hash function How hashes are used to identify yourself online Brute-forcing password hashes. Complexity considerations A naive approach A statistically determined approach Password Hash Cracking Motivation I recently had an unauthorized access on my Amazon account. Luckily, Amazon sent me a 2-factor authentification request to confirm my login, which I promptly denied, but it got me interested in how these kind of attacks work.</description></item></channel></rss>